---
// Components
import Button from "components/Button.astro"
import Logo from "./Logo.astro"
import NotificationBar from "components/NotificationBar.astro"

const hasNotificationBar = false // Set this to false when NotificationBar is removed or page will crash

const links = [
  {
    text: "ËÆ≤Â∏à",
    link: "/zh/speakers",
  },
  {
    text: "Â∑•‰ΩúÂùä",
    link: "/zh/workshops",
  },
  {
    text: "‰∏ªÈ¢ò",
    link: "/zh/#tracks",
  },
  {
    text: "Spotlight",
    link: "/zh/#spotlight",
  },
  {
    text: "ÂêåÊúüÊ¥ªÂä®",
    subLinks: [
      {
        text: "RustGlobal & RustChinaConf",
        link: "https://rustcc.cn/2025conf/",
        openInNewTab: true,
      },
      {
        text: "Code Alert ÈªëÂÆ¢ÊùæÂ§ßËµõ",
        link: "https://hackathon.mofa.ai",
        openInNewTab: true,
      },
      // {
      //   text: "AIOS ÈªëÂÆ¢ÊùæÂ§ßËµõ",
      //   link: "https://mofa.ai/super-agent-hackathon/",
      //   openInNewTab: true,
      // },
    ],
  },
  {
    text: "‰ºöËÆÆÂú∞ÁÇπ",
    link: "/zh/venue"
  },
  // {
  //   text: "Â∏∏ËßÅÈóÆÈ¢ò",
  //   link: "/zh/faq/",
  // },
]

const slug = Astro.url.pathname
const isZhPath = slug.startsWith('/zh/')
const switchPath = isZhPath ? slug.replace('/zh/', '/') : `/zh${slug}`
---

<header>
  {
    hasNotificationBar && (
      <NotificationBar
        text="üéâ ÂèÇÂä†GOSIMÈó®Á•® üéü Âπ∏ËøêÊäΩÂ•ñÔºÅ ‚ú®"
        link="https://x.com/gosimfoundation/status/1912744752925282408"
      />
    )
  }

  <div class="floating-ticket-button">
    <Button
      text="Ëé∑ÂèñÈó®Á•®"
      link="/zh/tickets"
      class="btn primary btn-floating btn-hover"
    />
  </div>

  <div class="mobile-nav">
    <div class="overlay overlay-dark" data-navigation-toggle="close"></div>

    <div class="mobile-nav-box">
      <div class="box-row box-row-logo">
        <Logo />
      </div>
      <nav class="box-row box-row-nav" aria-label="Navigation Mobile">
        <ul>
          {
            links.map((loop) => (
              <li
                class={`link link-hover ${loop.subLinks ? "has-sublinks" : ""}`}
                data-barba-update
                data-link-status={loop.link === slug ? "active" : "not-active"}
                data-has-sublinks={loop.subLinks ? "true" : "false"}
                data-sublinks={
                  loop.subLinks ? JSON.stringify(loop.subLinks) : "[]"
                }
              >
                {loop?.subLinks ? (
                  <button class="link-click">
                    <span>{loop.text}</span>
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width="16"
                      height="16"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      class="ml-2 inline-block"
                    >
                      <path d="m6 9 6 6 6-6" />
                    </svg>
                  </button>
                ) : (
                  <a class="link-click" href={loop.link}>
                    <span>{loop.text}</span>
                  </a>
                )}
              </li>
            ))
          }
          <li class="link link-hover mobile-language-item">
            <div class="language-mobile-menu">
              <a class="language-item" href={slug.replace('/zh/', '/')}>English</a>
              <a class="language-item active" href={slug}>‰∏≠Êñá</a>
            </div>
          </li>
        </ul>
      </nav>
      <div class="box-row box-row-btn">
        <Button
          text="Ëé∑ÂèñÈó®Á•®"
          link="/zh/tickets"
          class="btn primary xl btn-hover"
        />
      </div>
    </div>
  </div>

  <button
    class="hamburger btn-floating"
    aria-label="Open menu"
    data-navigation-toggle="toggle"
    data-has-notification={hasNotificationBar}
  >
    <div class="hamburger-fill"></div>
    <div class="bar bar-top"></div>
    <div class="bar bar-bottom"></div>
  </button>

  <div
    class="btn light btn-filter btn-filter-floating btn-hover"
    data-has-notification={hasNotificationBar}
  >
    <div class="btn-click filter-alpha-animate" data-filter-toggle="toggle">
      <div class="btn-content original">
        <div class="btn-fill"></div>
        <span>Á≠õÈÄâ</span>
      </div>
      <div class="border-box"></div>
    </div>
  </div>

  <div
    class="main-nav-bar"
    style="opacity: 1;"
    data-has-notification={hasNotificationBar}
  >
    <div class="overlay nav-fill"></div>
    <div class="row">
      <div class="border-bottom"></div>

      <div class="logo">
        <a href="/zh/" aria-label="ÂâçÂæÄÈ¶ñÈ°µ" class="logo-click">
          <Logo />
          <Logo />
        </a>
      </div>

      <nav aria-label="Navigation Desktop">
        <ul>
          {
            links.map((loop) => (
              <li
                class={`link link-hover ${loop.subLinks ? "has-sublinks" : ""}`}
                style="position: relative;"
                data-barba-update
                data-link-status={loop.link === slug ? "active" : "not-active"}
                data-has-sublinks={loop.subLinks ? "true" : "false"}
                data-sublinks={
                  loop.subLinks ? JSON.stringify(loop.subLinks) : "[]"
                }
              >
                {loop?.subLinks ? (
                  <button class="link-click">
                    <span>{loop.text}</span>
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width="16"
                      height="16"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      class="ml-2 inline-block"
                    >
                      <path d="m6 9 6 6 6-6" />
                    </svg>
                  </button>
                ) : (
                  <a class="link-click" href={loop.link}>
                    <span>{loop.text}</span>
                  </a>
                )}
              </li>
            ))
          }
        </ul>
      </nav>

      <div class="header-buttons">
        <div class="language-dropdown">
          <button class="language-btn">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <circle cx="12" cy="12" r="10"></circle>
              <line x1="2" y1="12" x2="22" y2="12"></line>
              <path d="M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"></path>
            </svg>
          </button>
          <div class="language-dropdown-content">
            <a href={slug.replace('/zh/', '/')}>English</a>
            <a href={slug} class="active">‰∏≠Êñá</a>
          </div>
        </div>
        <Button
          text="Ëé∑ÂèñÈó®Á•®"
          link="/zh/tickets"
          class="btn outline btn-hover"
        />
      </div>
      <div class="hamburger outline" data-navigation-toggle="toggle">
        <div class="hamburger-fill"></div>
        <div class="bar bar-top"></div>
        <div class="bar bar-bottom"></div>
      </div>

      <div class="btn light btn-filter btn-filter-static btn-hover">
        <div class="btn-click filter-alpha-animate" data-filter-toggle="toggle">
          <div class="btn-content original">
            <div class="btn-fill"></div>
            <span>Á≠õÈÄâ</span>
          </div>
          <div class="border-box"></div>
        </div>
      </div>
    </div>
  </div>
</header>

<style>
  .floating-ticket-button {
    position: relative;
    top: -15px;
    z-index: 10;
  }

  /* Ensure notification bar is clickable */
  :global(.notification-bar) {
    position: relative;
    z-index: 20; /* Higher than other header elements */
    width: 100%;
    pointer-events: auto;
  }

  .main-nav-bar[data-has-notification="true"] {
    padding-top: calc(var(--row-gap) + 45px);
  }

  .hamburger.btn-floating[data-has-notification="true"],
  .btn.btn-filter-floating[data-has-notification="true"] {
    margin-top: 32px;
  }

  /* Language dropdown styles */
  .header-buttons {
    display: flex;
    align-items: center;
    gap: 15px;
    color: inherit; /* Ensure header buttons inherit text color for icon */
  }

  .language-dropdown {
    position: relative;
    display: inline-block;
    color: inherit; /* Inherit text color from parent */
  }

  .language-btn {
    background: transparent;
    border: none;
    cursor: pointer;
    padding: 5px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: inherit;
    transition: color 0.3s ease;
  }
  
  /* Ensure the globe icon inherits the text color */
  .language-btn svg {
    color: inherit;
    stroke: currentColor;
    transition: color 0.3s;
  }

  .language-dropdown-content {
    display: none;
    position: absolute;
    background-color: #f9f9f9;
    min-width: 120px;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    border-radius: 4px;
    right: 0;
  }

  .language-dropdown-content a {
    color: black;
    padding: 12px 16px;
    text-decoration: none;
    display: block;
    text-align: left;
  }

  .language-dropdown-content a:hover {
    background-color: #f1f1f1;
  }

  .language-dropdown-content a.active {
    font-weight: bold;
    background-color: #e9e9e9;
  }

  .language-dropdown:hover .language-dropdown-content {
    display: block;
  }

  /* Mobile language menu */
  .mobile-language-item {
    margin-top: 15px;
  }

  .language-mobile-menu {
    display: flex;
    gap: 15px;
    padding: 10px 0;
  }

  .language-item {
    padding: 5px 10px;
    border-radius: 4px;
    text-decoration: none;
  }

  .language-item.active {
    font-weight: bold;
    background-color: rgba(255, 255, 255, 0.1);
  }
</style>