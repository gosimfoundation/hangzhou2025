---
// Packages
import { Picture } from "astro:assets"
import type { ImageMetadata } from "astro"

// Components
import Button from "components/Button.astro"

// JSON
import speakersData from "json/Speakers.json"

const filteredSpeakers = speakersData.speakers.filter(
  (speaker) => speaker.draft !== true && speaker.id !== "tbd")

// Import all images
const images = import.meta.glob<{ default: ImageMetadata }>(
  "images/speakers/*.{jpeg,jpg,png,gif}"
)

interface Props {
  title: string
  ctaButton: {
    text: string
    link: string
  }
}

const { title, ctaButton } = Astro.props

// Function to map tag ID to category name
const getCategoryNameFromTag = (tagId: string): string => {
  const category = speakersData.categories.find((cat) => cat.id === tagId)
  return category ? category.name : tagId
}
---

<section
  class="section section-speakers-featured"
  data-theme-section="light"
  data-bg-section="light"
>
  <div class="container wide">
    <div class="row">
      <div class="col col-title">
        <h2>{title}</h2>
      </div>
    </div>

    <div
      class="flickity-slider-group four-col count-6"
      data-flickity-slider-type="cards"
    >
      <div class="flickity-carousel" style="outline: none;">
        {
          filteredSpeakers?.map(
            (loop, i) =>
              i < 11 && (
                <div class="flickity-slide" data-cursor-bubble-text="Drag">
                  <div class="single-speakers-card">
                    <div class="card-row card-row-image">
                      <div class="card-image">
                        {loop?.image &&
                          images[`/public/images/speakers/${loop.image}`] && (
                            <Picture
                              src={images[
                                `/public/images/speakers/${loop.image}`
                              ]()}
                              formats={["webp", "jpg"]}
                              alt={loop.name}
                              class="overlay"
                              widths={[275, 400, 500, 600, 750, 900]}
                              sizes="(max-width: 700px) 58vw, 450px"
                            />
                          )}
                      </div>

                      <div class="card-tags group-tags">
                        <div class="single-tag">
                          <p>{getCategoryNameFromTag(loop.tag)}</p>
                        </div>
                      </div>
                    </div>
                    <div class="card-row card-row-info">
                      <h3 class="h5">{loop.name}</h3>
                      <p>{loop.roleOrg}</p>
                    </div>
                  </div>
                </div>
              )
          )
        }
      </div>
    </div>

    <div class="row">
      <div class="col">
        <Button
          text={ctaButton.text}
          link={ctaButton.link}
          class="btn outline btn-hover xl"
        />
      </div>
    </div>
  </div>
</section>
